/*
JAKUB WAWAK
ALL RIGHTS RESERVED.
kubawawak@gmail.com
 */
package photomator;

import java.io.File;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class main_window extends javax.swing.JFrame {

    /**
     * Creates new form main_window
     */
    
    DefaultTableModel table_model = new DefaultTableModel();
    ArrayList<Photo> all_files = new ArrayList<>();
    Configuration actual = new Configuration();
    
    String path = "";
    
    public main_window() {
        super("PhotoMator");
       
        initComponents();

        aparaty_combobox.removeAllItems();
        for(String c : actual.get_camera_presets().get(0)){
            aparaty_combobox.addItem(c);
        }
        kopiuj_button.setEnabled(false);
        setLocationRelativeTo(null);
        setVisible(true);
    }
    
    DefaultTableModel buildTableModel(ArrayList<Photo> ph){
        Vector<String> columnNames = new Vector<String>();
        
        columnNames.add("Nazwa pliku");
        columnNames.add("Rozszerzenie Pliku");
        columnNames.add("Data Modyfikacji");
        columnNames.add("Scieżka Pliku");
        
        Vector<Vector<String>> data = new Vector<>();
        
        for(Photo p: all_files){
            Vector<String> vector = new Vector();
            
            vector.add(p.name);
            vector.add(p.enl);
            vector.add(p.photo_date);
            vector.add(p.photo_src);
            
            data.add(vector);
        }
        return new DefaultTableModel(data,columnNames);
    }
    void reload(){
        
        //reload comboboxa
        aparaty_combobox.removeAllItems();
        for(String c : actual.get_camera_presets().get(0)){
            aparaty_combobox.addItem(c);
        }
        //reload zapisu labela formy daty
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabela_plikow = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        przegladaj_button = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        aparaty_combobox = new javax.swing.JComboBox<>();
        zmien_format_button = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        wyczysc_button = new javax.swing.JButton();
        podglad_button = new javax.swing.JButton();
        podglad_sciezki_button = new javax.swing.JButton();
        kopiuj_button = new javax.swing.JButton();
        automator_button = new javax.swing.JButton();
        odznacz_button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tabela_plikow.setModel(table_model);
        tabela_plikow.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane1.setViewportView(tabela_plikow);

        jLabel1.setText("Wybierz ścieżkę ze zdjęciami:");

        przegladaj_button.setText("Przeglądaj");
        przegladaj_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                przegladaj_buttonActionPerformed(evt);
            }
        });

        jLabel3.setText("Wybierz Aparat:");

        aparaty_combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        aparaty_combobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aparaty_comboboxActionPerformed(evt);
            }
        });

        zmien_format_button.setText("Zmien format nazwy folderu");
        zmien_format_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zmien_format_buttonActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("PhotoMator");

        wyczysc_button.setText("Wyczyść");
        wyczysc_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wyczysc_buttonActionPerformed(evt);
            }
        });

        podglad_button.setText("?");
        podglad_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                podglad_buttonActionPerformed(evt);
            }
        });

        podglad_sciezki_button.setText("Podgląd");
        podglad_sciezki_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                podglad_sciezki_buttonActionPerformed(evt);
            }
        });

        kopiuj_button.setText("Kopiuj..");
        kopiuj_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kopiuj_buttonActionPerformed(evt);
            }
        });

        automator_button.setText("Automator");
        automator_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                automator_buttonActionPerformed(evt);
            }
        });

        odznacz_button.setText("Odznacz wybór");
        odznacz_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                odznacz_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(wyczysc_button)
                        .addGap(35, 35, 35)
                        .addComponent(odznacz_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(automator_button)
                        .addGap(30, 30, 30)
                        .addComponent(kopiuj_button))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 726, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(przegladaj_button)
                            .addGap(18, 18, 18)
                            .addComponent(podglad_sciezki_button)
                            .addGap(91, 91, 91)
                            .addComponent(jLabel3)
                            .addGap(37, 37, 37)
                            .addComponent(aparaty_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(podglad_button, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addGap(415, 415, 415)
                            .addComponent(zmien_format_button, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(zmien_format_button)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(aparaty_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(podglad_button, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(przegladaj_button)
                                .addComponent(podglad_sciezki_button))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3))))))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wyczysc_button)
                    .addComponent(kopiuj_button)
                    .addComponent(automator_button)
                    .addComponent(odznacz_button))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void aparaty_comboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aparaty_comboboxActionPerformed

    }//GEN-LAST:event_aparaty_comboboxActionPerformed

    private void przegladaj_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_przegladaj_buttonActionPerformed
        JFileChooser myFileChooser = new JFileChooser();
        myFileChooser.setDialogTitle("Znajdz swój aparat");
        myFileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        if(myFileChooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION){
            String path = myFileChooser.getSelectedFile().getAbsolutePath();
            File folder = new File(path);
            if(folder.isDirectory()){
                File[] listOfFiles = folder.listFiles();
                for (int i = 0; i < listOfFiles.length; i++) {
                    if (listOfFiles[i].isFile()) {
                        all_files.add(new Photo(listOfFiles[i].getAbsolutePath()));
                    } 
                }
                this.path = path;
                DefaultTableModel tableModel = (DefaultTableModel) tabela_plikow.getModel();
                tableModel.setRowCount(0);
                table_model = buildTableModel(all_files);
                tabela_plikow.setModel(table_model);
                przegladaj_button.setEnabled(false);
                kopiuj_button.setEnabled(true);
            }
            else{
                JOptionPane.showMessageDialog(this, "Proszę wybrać folder");
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Nie wybrales folderu");
        }
    }//GEN-LAST:event_przegladaj_buttonActionPerformed

    private void wyczysc_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wyczysc_buttonActionPerformed
        table_model.setRowCount(0);
        all_files.clear();
        przegladaj_button.setEnabled(true);
        kopiuj_button.setEnabled(false);
    }//GEN-LAST:event_wyczysc_buttonActionPerformed

    private void zmien_format_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zmien_format_buttonActionPerformed
        new zmiana_formatu_window(this,true);
        actual = new Configuration();
    }//GEN-LAST:event_zmien_format_buttonActionPerformed

    private void podglad_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_podglad_buttonActionPerformed
        JOptionPane.showMessageDialog(this, actual.get_camera_path((String) aparaty_combobox.getSelectedItem()));
    }//GEN-LAST:event_podglad_buttonActionPerformed

    private void podglad_sciezki_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_podglad_sciezki_buttonActionPerformed
        if(!path.equals("")){
            JOptionPane.showMessageDialog(this,path);
        }
        else{
            JOptionPane.showMessageDialog(this,"Nie wybrałeś scieżki");
        }        
    }//GEN-LAST:event_podglad_sciezki_buttonActionPerformed

    private void kopiuj_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kopiuj_buttonActionPerformed
        if(!path.equals("")){
            //tutaj rozpoczynamy ekran kopiowania
            ArrayList<Photo> choosen = new ArrayList<>();
            int selectedRow[] = tabela_plikow.getSelectedRows();
            if(selectedRow.length!=0){
                for(Integer index: selectedRow){
                    choosen.add(new Photo((String) tabela_plikow.getValueAt(index, 3)));
                }
                //tutaj otwieramy okno
                new copy_window(this,true,choosen,actual.get_camera_path((String) aparaty_combobox.getSelectedItem()));
                JOptionPane.showMessageDialog(this, "Pliki zostały skopiowane");
                setVisible(false);
                dispose();
            }
            else{
                JOptionPane.showMessageDialog(this, "Zaznacz pliki do skopiowania");
                JOptionPane.showMessageDialog(this,"W celu skopiowania wszystkich skorzystaj z Automatora");
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Nie wybrałeś scieżki");
        }
    }//GEN-LAST:event_kopiuj_buttonActionPerformed

    private void odznacz_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_odznacz_buttonActionPerformed
        tabela_plikow.clearSelection();
    }//GEN-LAST:event_odznacz_buttonActionPerformed

    private void automator_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_automator_buttonActionPerformed
        if(!path.equals("")){
            //tutaj rozpoczynamy ekran kopiowania
            ArrayList<Photo> choosen = new ArrayList<>();
            int selectedRow[] = tabela_plikow.getSelectedRows();
            if(selectedRow.length!=0){
                for(Integer index: selectedRow){
                    choosen.add(new Photo((String) tabela_plikow.getValueAt(index, 3)));
                }
                //tutaj otwieramy okno
                new automator_window(this,true,choosen,actual.get_camera_path((String) aparaty_combobox.getSelectedItem()),actual);
                JOptionPane.showMessageDialog(this, "Pliki zostały skopiowane");
                setVisible(false);
                dispose();
            }
            else{
                JOptionPane.showMessageDialog(this, "Zaznacz pliki do skopiowania");
                JOptionPane.showMessageDialog(this,"W celu skopiowania wszystkich skorzystaj z Automatora");
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Nie wybrałeś scieżki");
        }
    }//GEN-LAST:event_automator_buttonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> aparaty_combobox;
    private javax.swing.JButton automator_button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton kopiuj_button;
    private javax.swing.JButton odznacz_button;
    private javax.swing.JButton podglad_button;
    private javax.swing.JButton podglad_sciezki_button;
    private javax.swing.JButton przegladaj_button;
    private javax.swing.JTable tabela_plikow;
    private javax.swing.JButton wyczysc_button;
    private javax.swing.JButton zmien_format_button;
    // End of variables declaration//GEN-END:variables
}
